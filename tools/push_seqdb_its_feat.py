'''
Created on Mar 5, 2015

@author: korolo
'''
import sys, getopt
from api.seqdbWebService import seqdbWebService


usage_help_line = """Usage of the script: \npush_seqdb_its_feat.py -k <SeqDB API key> -f <features file name>
Other arguments:
   -h       help (prints this message)
   -p       use production url for web service requests
   -u <url> specify base url for web services requests"""


prod_url = "***REMOVED***/api/v1"
local_url = "***REMOVED***:8181/seqdb.web-2.5/api/v1"

# The name of the feature type for each itsx feature
its_feature_type_name = "misc_RNA"
feature_description = "Generated by ITSx tool."
output_file_name = 'seqdb_feature_ids.txt'



# Parses command line arguments 
# Returns:
#    seqdb api_key
#    name of the ITSx poisitons file (containing feature to import)
#    base url to use for web services requests
def parse_input_args(argv):
    seqdb_api_key = ''
    base_url=''
    features_file_name = ''
    
    prod=False
    user_url=''
    
    try:
        opts, args = getopt.getopt(argv,"hpk:f:u:",["seqdb_api_key="])
    except getopt.GetoptError:
        print usage_help_line
        sys.exit(2)
        
    if len(opts)==0:
        print usage_help_line
        sys.exit(2)
    
    for opt, arg in opts:
        if opt == '-h':
            print usage_help_line
            sys.exit()
        elif opt in ("-k", "--seqdb_api_key"):
            seqdb_api_key = arg
        elif opt in ("-f", "--features_file"):
            features_file_name = arg
        elif opt == "-p":
            prod=True
        elif opt == "-u":
            user_url = arg
            
    if user_url:
        base_url = user_url
    elif prod:
        base_url = prod_url
    else:
        base_url = local_url
    
    return seqdb_api_key, features_file_name, base_url




# B15_17_SH817_ITS_ITS5    622 bp.    SSU: Not found    ITS1: 1-241    5.8S: 242-399    ITS2: 400-557    LSU: 558-622
def main(api_key, features_file_name, base_url):
    #print "Sending request to: " + base_url
    
    created_feature_ids = []
    
    # Open an ITSx positions file
    feat_file = ''
    try:
        feat_file = open(features_file_name,"r")
    except IOError as e:
        if e.errno == 2:
            print "Could not open ITSx feature positions file <%s>." % features_file_name
            sys.exit(1)
        else:
            raise
    
    seqdbWS = seqdbWebService(api_key, base_url)
    
    # These features are returned by ITSx program and should have a corresponding feature type in the SeqDB
    #its_feature_types = ["SSU", "ITS1", "5.8S", "ITS2", "LSU"]
    
    # Get all feature types from seqDB
    seqdb_feat_types = seqdbWS.getFeatureTypesWithIds()
    #feat_types = {"1":"Quality Trim", "2":"Vector Trim"}
    
    feature_type_id = ''
    # Create feature type in SeqDB, if don't exist already
    if its_feature_type_name not in seqdb_feat_types:
        feature_type_id = seqdbWS.createFeatureType(its_feature_type_name)
    else:
        feature_type_id = seqdb_feat_types[its_feature_type_name]
            
    ### TODO: Finalize what to use for the frame: and strand:
    ###        (using default 1 and 1 for now)
    
    # parse the file and insert each found feature to SeqDB
    for line in feat_file:
        line_tokens = line.split('\t')

        #sequenceId = line_tokens[0].split('|')[1].replace('seqdbId:','')
        sequenceId = line_tokens[0].split('|')[1]
        
        itsx_features = line_tokens[2:7]
        
        
        for itsx_feature_token in itsx_features:
            feature_location_pair = itsx_feature_token.split(": ")
            try:
                location = feature_location_pair[1].split("-")
                location = map(int, location)
                location = [{"start":location[0],"end":location[1],"frame":1,"strand":1}]
                fid = seqdbWS.insertFeature(feature_location_pair[0], feature_type_id, location, sequenceId, description=feature_description)
                created_feature_ids.append(fid)
            except ValueError:
                pass


        # Write ids of the inserted features into a file
        output_file = open(output_file_name, 'w')
        for fid in created_feature_ids:
            output_file.write(str(fid) + '\n')
        output_file.close()

    return created_feature_ids

    

if __name__ == '__main__':
    seqdb_api_key, features_file_name, base_url = parse_input_args(sys.argv[1:])
    
    ok_feat_ids = main(seqdb_api_key, features_file_name, base_url)
    
    print("Number of features written to Sequence Dababase:   %i " % len(ok_feat_ids) )
    print("Base url for Sequence Database web services:   %s" %  base_url)
